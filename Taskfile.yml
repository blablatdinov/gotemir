# The MIT License (MIT).
#
# Copyright (c) 2024-2025 Almaz Ilaletdinov <a.ilaletdinov@yandex.ru>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
# OR OTHER DEALINGS IN THE SOFTWARE.
---
version: '3'

tasks:

  docker-setup:
    cmds:
      - docker build -t gotemir-dev .

  docker-bash:
    cmds:
      - docker run -it --rm -v $(pwd):/app --name gotemir-dev gotemir-dev bash

  docker-test:
    cmds:
      - docker run -it --rm -v $(pwd):/app --name gotemir-dev gotemir-dev task unit-tests integration-tests

  docker-lint:
    cmds:
      - docker run -it --rm -v $(pwd):/app --name gotemir-dev gotemir-dev task lint

  docker-fmt:
    cmds:
      - docker run -it --rm -v $(pwd):/app --name gotemir-dev gotemir-dev task fmt

  default:
    desc: "Build pipeline"
    deps:
      - install-deps
      - unit-tests
      - integration-tests
      - lint
      - build

  build:
    desc: "Build the app"
    deps: [install-deps]
    cmds:
      - go build -o dist/gotemir src/cmd/gotemir.go

  install-deps:
    desc: "Install dependencies"
    cmds:
      - go mod tidy
      - uv sync

  unit-tests:
    desc: "Run unit tests"
    vars:
      TEST_NAME: '{{ .CLI_ARGS | default "./..." }}'
    cmds:
      - go test {{.TEST_NAME}} -test.v

  integration-tests:
    desc: "Run integration tests"
    cmds:
      - uv run pytest tests/it/test.py -s

  fmt:
    desc: "Run formatters"
    cmds:
      - golangci-lint run
      - uv run isort tests
      - uv run ruff check tests --fix

  lint:
    desc: "Run linters"
    cmds:
      - ec
      - yamllint .
      - golangci-lint run
      - uv run ruff check tests
      - uv run mypy tests

  clean:
    desc: "Clean caches"
    cmds:
      - git clean -f -d -x
